// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  username       String?
  image          String?
  hashedPassword String?
  balance        Int?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  savedIds       String[]  @db.ObjectId

  bids     Bid[]
  accounts Account[]
  items    Item[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Bid {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  itemId    String   @db.ObjectId
  createdAt DateTime @default(now())
  amount    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  item      Item     @relation(fields: [itemId], references: [id])
}

model Item {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  description  String
  startDate    DateTime
  endDate      DateTime
  isActive     Boolean
  buyOutPrice  Int
  initialPrice Int
  year         Int?
  CreatedAt    DateTime @default(now())
  UpdatedAt    DateTime @updatedAt
  userId       String?  @db.ObjectId
  bidId        String?  @db.ObjectId
  User         User?    @relation(fields: [userId], references: [id])

  bids Bid[]
}
